#!/usr/bin/python3
# -*- coding: utf-8 -*-

'''
---自动化测试框架梳理---
为什么要做自动化？
提高测试效率，减少人力，节省时间

框架的意义：
代码复用性强，提高效率；可读性强；便于维护；可拓展；
1.数据与代码分离（数据驱动）
2.结构分层（数据层，用例层，逻辑层）

好处：
1.手工测试用例与自动化完美结合，避免重复工作。
2.配置灵活，根据需要快速选择执行用例/切换测试环境。
3.常用功能封装，逻辑清晰，易于维护。
4.统一执行入口，管理测试用例集。
5.持续集成，定时构建，快速反馈。

使用到技术/框架
1.语言python
2.测试框架unittest ---pytest也可以
3.接口调用requests ---为什么用？http请求
4.数据驱动 ddt修饰类，data修饰方法
5.数据管理openpyxl---一个库完成读和写
6.数据库交互pymysql---根据数据库类型来选择的，如果是Oracle用cx_oracle，如果是sqlserver用pymssql
7.数据格式的转换eval，json---string转成字典
8.日志处理logging---清晰的执行过程，快速定位问题
9.持续集成jenkins---持续构建，持续反馈

常见面试题：
1.get和post的区别？
答：get和post是http协议的两种请求方式，
在传输层都是基于tcp/ip协议，所以在传输层是没有区别的；
但是基于http对这两种方式的定义，通常get是用于获取资源，通过url传参；
post通常用于修改、添加资源，参数放在body里请求。

2.post请求的四种参数形式？
application/x-www-form-urlencoded  表单（编码）
multipart/for-data 表单（不编码） 文件上传
application/json
application/xml

3.http状态码302,403,503分别代表什么？
302临时重定向
403拒绝访问，访问权限限制
503服务不可用

4.接口自动化中的关联怎么处理？
接口b传参要用到，接口a返回的参数
1）首先将关联参数进行参数化处理（即接口a返回的值和接口b传入的值定义为同一个参数）
2）通过定义公共的上下文管理类，将我们参数化的Key设置为类属性，
然后运用Python的反射方法，将参数的提取和设置转换为我们类属性的提取和设置，完成关联数据的传递。

5.自动化测试怎么校验结果?
1）对接口响应进行校验，包含响应码和响应体，通过实际结果与期望结果进行对比；
2）对数据进行校验，根据我们不同的业务场景，查询数据库，对数据进行校验。

6.自动化使用的框架是什么？简述自动化框架的设计、维护？
问题1：结合前面讲到的自动化框架结构、用到的技术、好处
问题2：设计与维护
为了实现代码复用性强，提高效率；可读性强；便于维护；可拓展；
设计
-->1.数据与代码分离（数据驱动）
-->2.结构分层（数据层，用例层，逻辑层）
维护
后期只需要操作用例层

面试准备：
框架一定要熟悉；简历上罗列的知识点一定要熟记于心；不会的不要写
面试题，笔试题，柠檬班APP
投简历时间早上8点，不要周五下班了投递
'''